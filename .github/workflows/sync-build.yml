name: Sync & Build AdbAutoPlayer

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 */6 * * *"  # toutes les 6 heures

jobs:
  sync-and-build:
    runs-on: windows-latest
    
    steps:
      # 1. Vérifier le code du fork
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      # 2. Synchroniser avec le repo original
      - name: Sync with upstream
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote add upstream https://github.com/AdbAutoPlayer/AdbAutoPlayer.git
          git fetch upstream
          git checkout main
          git merge upstream/main --no-edit
          git push origin main
        continue-on-error: true
      
      # 3. Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      # 4. Installer les dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # 5. Builder l'executable avec le script officiel
      - name: Build Windows executable
        run: |
          .\.github\scripts\build_windows.ps1
        shell: powershell
      
      # 6. Trouver et vérifier l'exe créé
      - name: Check build output
        run: |
          Write-Host "Searching for built executable..."
          $exeFiles = Get-ChildItem -Path . -Recurse -Filter "*.exe" | Where-Object { $_.Directory.Name -eq "dist" -or $_.Directory.Name -eq "build" -or $_.Directory.Name -eq "output" }
          
          if ($exeFiles) {
            Write-Host "✅ Build successful! Found:"
            $exeFiles | ForEach-Object { Write-Host $_.FullName }
            
            # Créer un dossier artifacts s'il n'existe pas
            New-Item -ItemType Directory -Force -Path "artifacts"
            
            # Copier tous les exe trouvés
            $exeFiles | ForEach-Object { Copy-Item $_.FullName -Destination "artifacts\" }
          } else {
            Write-Host "❌ Build failed - no exe found"
            exit 1
          }
        shell: powershell
      
      # 7. Upload l'exe comme artifact
      - name: Upload executable
        uses: actions/upload-artifact@v4
        with:
          name: AdbAutoPlayer-Windows-exe
          path: artifacts/*.exe
          if-no-files-found: error
      
      # 8. (Optionnel) Créer une release automatique sur tag
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}